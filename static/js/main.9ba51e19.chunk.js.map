{"version":3,"sources":["components/MovieItem/movieitem.tsx","components/Body/body.tsx","components/NavBar/navbar.tsx","App.tsx","index.tsx"],"names":["MovieItem","styled","className","movie_id","onClick","useState","title","changeTitle","overview","changeOverview","poster","changePoster","useEffect","axios","get","then","res","data","window","addEventListener","poster_path","src","alt","e","console","log","moviesMap","arr","show_all","show_switch","_arr","map","index","getLastMovies","a","results","id","Body","movies","setMovies","change_show_all","catch","err","length","NavBar","href","onSubmit","preventDefault","placeholder","type","name","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ba51e19.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\n\r\nexport const SSmovieitem: React.FC<{\r\n  className?: string;\r\n  movie_id: number;\r\n  onClick?: (e: any) => void;\r\n}> = ({ className, movie_id, onClick }) => {\r\n  const [title, changeTitle] = useState(\"Cargando..\");\r\n  const [overview, changeOverview] = useState(\"Cargando..\");\r\n  const [poster, changePoster] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (movie_id !== -1) {\r\n      axios\r\n        .get(\r\n          `https://api.themoviedb.org/3/movie/${movie_id}?api_key=d9d559e0133b604a0108b3c1a3792593&language=es`\r\n        )\r\n        .then((res) => {\r\n          const { data } = res;\r\n\r\n          window.addEventListener(\"resize\", () => {\r\n          });\r\n          changeOverview(data.overview);\r\n          changeTitle(data.title);\r\n          changePoster(`https://image.tmdb.org/t/p/w500${data.poster_path}`);\r\n        });\r\n    }\r\n  }, [movie_id]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      {movie_id !== -1 ? (\r\n        <>\r\n          {poster !== \"\" ? (\r\n            <img className=\"image\" src={poster} alt=\"\" />\r\n          ) : (\r\n            <img\r\n              className=\"image\"\r\n              alt=\"\"\r\n              src=\"https://media1.tenor.com/images/556e9ff845b7dd0c62dcdbbb00babb4b/tenor.gif\"\r\n            />\r\n          )}\r\n          <h1 className=\"title\">{title}</h1>\r\n          <div className=\"movie-body\">\r\n            <p>{overview}</p>\r\n          </div>\r\n        </>\r\n      ) : (\r\n        <Fragment>\r\n          <img\r\n            className=\"image\"\r\n            src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/9e/Plus_symbol.svg/1200px-Plus_symbol.svg.png\"\r\n            alt=\"\"\r\n            onClick={(e) => {\r\n              if (onClick) {\r\n                onClick(\"uwu\");\r\n              } else {\r\n                console.log(\"error\");\r\n              }\r\n            }}\r\n          />\r\n          <h1\r\n            onClick={(e) => {\r\n              if (onClick) {\r\n                onClick(\"uwu\");\r\n              } else {\r\n                console.log(\"error\");\r\n              }\r\n            }}\r\n            className=\"title\"\r\n          >\r\n            Mostrar mas..\r\n          </h1>\r\n        </Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport const MovieItem = styled(SSmovieitem)`\r\n  & {\r\n    display: grid;\r\n    grid-template-rows: 500px 60px;\r\n\r\n    overflow: hidden;\r\n    margin-bottom: 20px;\r\n    background: #fff;\r\n    cursor: pointer;\r\n  }\r\n  .image {\r\n    height: 500px;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    object-fit: cover;\r\n    transition: all 1s ease;\r\n  }\r\n  .title {\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    font-size: 18px;\r\n    color: white;\r\n    background: #1b1b1b;\r\n    z-index: 10;\r\n  }\r\n  &:hover .movie-body {\r\n    opacity: 1;\r\n  }\r\n  &:hover .movie-body > p {\r\n    transform: scale(1, 1);\r\n  }\r\n  &:hover .image {\r\n    transform: scale(1.2, 1.2);\r\n  }\r\n  .movie-body {\r\n    border-radius: var(--border) var(--border) 0 0;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    height: 500px;\r\n    width: var(--movie-width);\r\n    color: white;\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    transition: all 1s ease;\r\n    opacity: 0; \r\n  }\r\n  .movie-body p {\r\n    transform: scale(0.5, 0.5);\r\n    transition: all 1s ease;\r\n    height:45%;\r\n    padding:1rem;\r\n    overflow:hidden;\r\n    text-overflow: ellipsis;\r\n  }\r\n  @media screen and (min-width: 800px) and (max-width: 1300px) {\r\n    & {\r\n      grid-template-rows: 300px 60px;\r\n    }\r\n    .image {\r\n      height: 300px;\r\n    }\r\n    .title {\r\n      font-size: 1rem;\r\n      padding: 0.5rem;\r\n    }\r\n    .movie-body {\r\n      height: 300px;\r\n      font-size: 12px;\r\n      padding: 0.5rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    & {\r\n      grid-template-rows: 250px 60px;\r\n    }\r\n    .movie-body {\r\n      height: 250px;\r\n      font-size: 0.6rem;\r\n      padding: 0.5rem;\r\n    }\r\n    .image {\r\n      height: 250px;\r\n    }\r\n    .title {\r\n      padding: 0.5rem;\r\n      font-size: 0.7rem;\r\n    }\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport React, { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { propTypes } from \"../../interfaces/proptypes\";\r\nimport { MovieItem } from \"../MovieItem/movieitem\";\r\nconst moviesMap :(arr:[],show_all:boolean,show_switch:()=>void)=>any = (arr, show_all ,show_switch ) => {\r\n  const _arr = [...arr];\r\n  if (!show_all) {\r\n     return (<>{_arr.map((e: any, index: number) => {\r\n       index++;\r\n      if (index < 10) {\r\n         return <MovieItem\r\n            key={e}\r\n            movie_id={e}\r\n          />\r\n        \r\n      }\r\n      else return <Fragment key={e}></Fragment>\r\n      \r\n    })} <MovieItem movie_id={-1} \r\n    onClick={()=>{show_switch()}}/> </>)\r\n  } else {\r\n    return _arr.map((e: any) => {\r\n      return (\r\n        <MovieItem\r\n          // img={\"https://image.tmdb.org/t/p/w500\" + e.poster_path}\r\n          key={e}\r\n          // title={e.title}\r\n          // overview={e.overview}\r\n          movie_id={e}\r\n        />\r\n      );\r\n    });\r\n  }\r\n \r\n};\r\n\r\nconst getLastMovies = async () => {\r\n  const { data } = await axios.get(\r\n    \"https://api.themoviedb.org/3/movie/now_playing?language=es&api_key=d9d559e0133b604a0108b3c1a3792593\"\r\n  );\r\n  if (data) {\r\n    return data.results.map((e: any) => {\r\n      return e.id;\r\n    });\r\n  } else return null;\r\n};\r\n\r\nexport const SSbody: React.FC<propTypes> = ({ className }) => {\r\n  const [movies, setMovies]: [[], any] = useState([]);\r\n  const [show_all,change_show_all] = useState(false);\r\n  \r\n  useEffect(() => {\r\n    getLastMovies()\r\n      .then((e) => {\r\n        setMovies(e);\r\n      })\r\n      .catch((err) => setMovies([])); \r\n  }, []);\r\n\r\n  return (\r\n    <main className={className}>\r\n      <h2>Ultimos Lanzamientos</h2>\r\n      <section className=\"movies\">\r\n        {movies.length !== 0 ? moviesMap(movies,show_all,()=>{change_show_all(!show_all)}) : \"Cargando..\"}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport const Body = styled(SSbody)`\r\n  & {\r\n    background: #444449;\r\n    height: auto;\r\n    padding: 2rem;\r\n  }\r\n  h2 {\r\n    padding: 3rem;\r\n    font-size: 2rem;\r\n    text-align: center;\r\n    color: #e2e2e2;\r\n  }\r\n  .movies {\r\n    display: grid;\r\n    justify-content: center;\r\n    --movie-width: 350px;\r\n    grid-template-columns: repeat(auto-fit, var(--movie-width));\r\n    column-gap: 5rem;\r\n  }\r\n  @media screen and (min-width: 800px) and (max-width: 1300px) {\r\n    .movies {\r\n      --movie-width: 200px;\r\n      grid-template-columns: repeat(auto-fit, var(--movie-width));\r\n      column-gap: 2rem;\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    padding: 0rem;\r\n    .movies {\r\n      column-gap: 10px;\r\n      --movie-width: 120px;\r\n      grid-template-columns: repeat(auto-fit, var(--movie-width));\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport 'font-awesome/css/font-awesome.css';\r\ninterface propTypes {\r\n  className?: string | any;\r\n}\r\n\r\nexport const SSnavbar: React.FC<propTypes> = ({ className }) => {\r\n  return (\r\n    <nav className={className}>\r\n      <h1 className=\"title\">Movies</h1>\r\n      <div className=\"navbar-end\">\r\n        <div className=\"navbar-item\">\r\n          <a href=\"https://developers.themoviedb.org/3\">API </a>{\" \"}\r\n        </div>\r\n        <div className=\"navbar-item\">\r\n          <a href=\"https://developers.themoviedb.org/3\">GitHub </a>\r\n        </div>\r\n      </div>\r\n      <form onSubmit={e=>{e.preventDefault()}} className=\"form\">\r\n       <div className=\"search-box\">\r\n\r\n        <input placeholder=\"Search..\" className=\"search\" type=\"text\" name=\"q\" id=\"q\"/>\r\n        <i className=\"fa fa-search\"></i>\r\n       </div>\r\n      </form>\r\n    </nav>\r\n  );\r\n};\r\nconst NavBar = styled(SSnavbar)`\r\n  & {\r\n    height: 10vh;\r\n    background: #242424;\r\n    border-bottom: 10px solid #404040;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    color: #e2e2e2;\r\n  }\r\n  .title {\r\n    font-size: 48px;\r\n    padding: 2rem;\r\n  }\r\n  .navbar-end {\r\n    margin-left:1rem;\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    height: 100%;\r\n    border-left: 10px solid #404040;\r\n    margin-right:auto;\r\n  }\r\n  .form{\r\n    width:50%;\r\n    margin-right:2rem;\r\n    display:flex;\r\n    align-items:center;\r\n    justify-content:space-between;\r\n  }\r\n  .form .submit{\r\n    padding: .5rem;\r\n    border: none;\r\n    background:transparent;\r\n    font-size: 1.5rem;\r\n    color:white;\r\n  }\r\n  .form .search-box{\r\n    \r\n    display:flex;\r\n    align-items:center;\r\n    position: relative;\r\n    width:100%;\r\n  }\r\n  .form   .search{\r\n    padding: .8rem;\r\n    padding-left:3rem;\r\n    background:#2e2e2e;\r\n    border:1px solid whitesmoke;\r\n    border-radius: 7px;\r\n    width:100%;\r\n    color: white;\r\n    font-size:1.2rem;\r\n    outline: none;\r\n  }\r\n  \r\n  .form .search-box i{\r\n    color : white;\r\n    position: absolute;\r\n    padding: 1rem;\r\n    left: 0%;\r\n    font-size:1.2rem;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #e2e2e2;\r\n  }\r\n  .navbar-item {\r\n    padding: 0 2rem;\r\n    font-size: 2rem;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .navbar-item:first-child {\r\n    border-right: 10px solid #404040;\r\n  }\r\n  @media screen and (min-width:500px) and (max-width: 800px){\r\n    .navbar-end {\r\n      display: none;\r\n      font-size: 1rem;\r\n    }\r\n \r\n  }\r\n   @media screen and (max-width: 500px)  {\r\n    .title {\r\n      font-size: 1.2rem;\r\n    }\r\n    .form .search{\r\n      padding: .8rem;\r\n      padding-left:3rem;\r\n      font-size: 1rem;\r\n    }\r\n    .navbar-end {\r\n      display: none;\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Body } from \"./components/Body/body\";\nimport NavBar from \"./components/NavBar/navbar\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <NavBar />\n      <Body />  \n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}