{"version":3,"sources":["components/MovieItem/movieitem.tsx","components/Body/body.tsx","components/NavBar/navbar.tsx","App.tsx","index.tsx"],"names":["MovieItem","styled","className","title","overview","img","split","length","console","log","splice","join","concat","fixedOverview","src","alt","getData","a","axios","get","data","results","Body","arr","useState","movies","setMovies","useEffect","then","e","catch","err","map","poster_path","id","NavBar","href","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"24CAIA,IA0BaA,EAAYC,aAlBmB,SAAC,GAKtC,IAJLC,EAII,EAJJA,UACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,SACAC,EACI,EADJA,IAIA,OAFAD,EAdkD,SAACA,GACnD,OAAIA,EAASE,MAAM,KAAKC,QAAU,IAChCC,QAAQC,IAAI,MAELL,EAASE,MAAM,KAAKI,OAAO,EAAG,IAAIC,KAAK,KAAKC,OAAO,QAC9CR,EASHS,CAAcT,GAGvB,sBAAKF,UAAWA,EAAhB,UACE,qBAAKA,UAAU,QAAQY,IAAKT,EAAKU,IAAI,KACrC,oBAAIb,UAAU,QAAd,SAAuBC,IACvB,qBAAKD,UAAU,aAAf,SACE,4BAAIE,WAKaH,CAAH,K,gXCzBtB,IAgBMe,EAAO,uCAAG,8BAAAC,EAAA,sEACSC,IAAMC,IAC3B,uGAFY,qBACNC,EADM,EACNA,MADM,yCAKLA,EAAKC,SALA,gCAMA,MANA,2CAAH,qDA8BAC,EAAOrB,aArBuB,SAAC,GAAmB,IAzB5CsB,EAyB2BrB,EAAgB,EAAhBA,UAAgB,EAC3BsB,mBAAS,MADkB,mBACrDC,EADqD,KAC7CC,EAD6C,KAY5D,OAVAC,qBAAU,WACRX,IACGY,MAAK,SAACC,GACLrB,QAAQC,IAAIoB,GACZH,EAAUG,GACVrB,QAAQC,IAAIgB,MAEbK,OAAM,SAACC,GAAD,OAASL,EAAU,WAC3B,CAACD,IAGF,uBAAMvB,UAAWA,EAAjB,UACE,sDACA,yBAASA,UAAU,SAAnB,SACGuB,GAzCUF,EAyCSE,EAxCnBF,EAAIS,KAAI,SAACH,GACd,OACE,mCACE,cAAC7B,EAAD,CACEK,IAAK,kCAAoCwB,EAAEI,YAE3C9B,MAAO0B,EAAE1B,MACTC,SAAUyB,EAAEzB,SACZ8B,GAAIL,EAAEK,IAHDL,EAAEK,UAmCqB,oBAKlBjC,CAAH,K,qxBC7CV,IAqDQkC,EAtCAlC,aAf8B,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAC9C,OACE,sBAAKA,UAAWA,EAAhB,UACE,oBAAIA,UAAU,QAAd,oBACA,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,cAAf,UACE,mBAAGkC,KAAK,sCAAR,kBAAuD,OAEzD,qBAAKlC,UAAU,cAAf,SACE,mBAAGkC,KAAK,sCAAR,+BAMKnC,CAAH,KCPGoC,EATO,WACpB,OACE,qCACE,cAAC,EAAD,IACA,cAACf,EAAD,QCLNgB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.109f9222.chunk.js","sourcesContent":["import React  from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { movie } from \"../../interfaces/movie\";\r\n\r\nconst fixedOverview: (overview: string) => string = (overview: string) => {\r\n  if (overview.split(\" \").length >= 40) {\r\n    console.log(\"xD\");\r\n\r\n    return overview.split(\" \").splice(0, 40).join(\" \").concat(\"...\");\r\n  } else return overview;\r\n};\r\n\r\nexport const SSmovieitem: React.FC<movie> = ({\r\n  className,\r\n  title,\r\n  overview,\r\n  img,\r\n}) => {\r\n  overview = fixedOverview(overview);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <img className=\"image\" src={img} alt=\"\" />\r\n      <h1 className=\"title\">{title}</h1>\r\n      <div className=\"movie-body\">\r\n        <p>{overview}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport const MovieItem = styled(SSmovieitem)`\r\n  & {\r\n    display: grid;\r\n    grid-template-rows: 500px 60px;\r\n\r\n    overflow: hidden;\r\n    margin-bottom: 100px;\r\n    background: #fff;\r\n    cursor: pointer;\r\n  }\r\n  .image {\r\n    height: 500px;\r\n    width: 100%;\r\n    overflow: hidden;\r\n    object-fit: cover;\r\n    transition: all 1s ease;\r\n  }\r\n  .title {\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    font-size: 18px;\r\n    background: #fff;\r\n    z-index: 10;\r\n  }\r\n  &:hover .movie-body {\r\n    opacity: 1;\r\n  }\r\n  &:hover .movie-body > p {\r\n    transform: scale(1, 1);\r\n  }\r\n  &:hover .image {\r\n\r\n    transform: scale(1.2, 1.2);\r\n  }\r\n  .movie-body {\r\n    border-radius: var(--border) var(--border) 0 0;\r\n    background: rgba(0, 0, 0, 0.8);\r\n    height: 500px;\r\n    width: 300px;\r\n    color: white;\r\n    position: absolute;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 2rem;\r\n    transition: all 1s ease;\r\n    opacity: 0;\r\n  }\r\n  .movie-body p {\r\n    transform: scale(0.5, 0.5);\r\n    transition: all 1s ease;\r\n  }\r\n`;\r\n","import axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { propTypes } from \"../../interfaces/proptypes\";\r\nimport { MovieItem } from \"../MovieItem/movieitem\";\r\nconst moviesMap = (arr: any) => {\r\n  return arr.map((e: any) => {\r\n    return (\r\n      <>\r\n        <MovieItem\r\n          img={\"https://image.tmdb.org/t/p/w500\" + e.poster_path}\r\n          key={e.id}\r\n          title={e.title}\r\n          overview={e.overview}\r\n          id={e.id}\r\n        />\r\n      </>\r\n    );\r\n  });\r\n};\r\n\r\nconst getData = async () => {\r\n  const { data } = await axios.get(\r\n    \"https://api.themoviedb.org/3/movie/now_playing?language=es&api_key=d9d559e0133b604a0108b3c1a3792593\"\r\n  );\r\n  if (data) {\r\n    return data.results;\r\n  } else return null;\r\n};\r\n\r\nexport const SSbody: React.FC<propTypes> = ({ className }) => {\r\n  const [movies, setMovies]: any = useState(null);\r\n  useEffect(() => {\r\n    getData()\r\n      .then((e) => {\r\n        console.log(e);\r\n        setMovies(e);\r\n        console.log(movies);\r\n      })\r\n      .catch((err) => setMovies(null));\r\n  }, [movies]);\r\n\r\n  return (\r\n    <main className={className}>\r\n      <h2>Ultimos Lanzamientos</h2>\r\n      <section className=\"movies\">\r\n        {movies ? moviesMap(movies) : \"Cargando..\"}\r\n      </section>\r\n    </main>\r\n  );\r\n};\r\nexport const Body = styled(SSbody)`\r\n  & {\r\n    background: #444449;\r\n    height: auto;\r\n    padding: 2rem;\r\n  }\r\n  h2 {\r\n    padding: 3rem;\r\n    font-size: 2rem;\r\n    color: #e2e2e2;\r\n  }\r\n  .movies {\r\n    display: grid;\r\n    justify-content: center;\r\n    grid-template-columns: repeat(auto-fit, 300px);\r\n    column-gap: 5rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\ninterface propTypes {\r\n  className?: string | any;\r\n}\r\n\r\nexport const SSnavbar: React.FC<propTypes> = ({ className }) => {\r\n  return (\r\n    <nav className={className}>\r\n      <h1 className=\"title\">Movies</h1>\r\n      <div className=\"navbar-end\">\r\n        <div className=\"navbar-item\">\r\n          <a href=\"https://developers.themoviedb.org/3\">API </a>{\" \"}\r\n        </div>\r\n        <div className=\"navbar-item\">\r\n          <a href=\"https://developers.themoviedb.org/3\">GitHub </a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nconst NavBar = styled(SSnavbar)`\r\n  & {\r\n    height: 10vh;\r\n    background: #2e2e2e;\r\n    border-bottom: 10px solid #404040;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: #e2e2e2;\r\n  }\r\n  .title {\r\n    font-size: 48px;\r\n    padding: 2rem;\r\n  }\r\n  .navbar-end {\r\n    display: flex;\r\n    justify-content: space-around;\r\n    align-items: center;\r\n    height: 100%;\r\n    border-left: 10px solid #404040;\r\n  }\r\n  a {\r\n    text-decoration: none;\r\n    color: #e2e2e2;\r\n  }\r\n  .navbar-item {\r\n    padding: 0 2rem;\r\n    font-size: 2rem;\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .navbar-item:first-child {\r\n    border-right: 10px solid #404040;\r\n  }\r\n`;\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Body } from \"./components/Body/body\";\nimport NavBar from \"./components/NavBar/navbar\";\n\nconst App: React.FC = () => {\n  return (\n    <>\n      <NavBar />\n      <Body />\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}